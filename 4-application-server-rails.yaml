apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rails-app-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "rails-app"
spec:
  tls:
    - hosts:
      - rails-app
      # kubectl create secret tls tls-certificate --key key.pem --cert fullchain.pem
      secretName: tls-certificate
  rules:
  - host: rails-app.com
    http:
      paths:
      - path: /
        backend:
          serviceName: rails-app
          servicePort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: rails-app
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 3000
  selector:
    app: rails-app
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rails-app
  template:
    metadata:
      labels:
        app: rails-app
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: rails-app
        image: k0kubun/rails-app:latest
        imagePullPolicy: Always
        env:
        # Consider using $DATABASE_URL instead of $DATABASE_*
        - name: DATABASE_USER
          value: root
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: DATABASE_HOST
          value: mysql.default.svc.cluster.local
        - name: DATABASE_PORT
          value: "3306"
        - name: RAILS_LOG_TO_STDOUT
          value: "true"
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        - name: SECRET_KEY_BASE
          value: xxx
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
