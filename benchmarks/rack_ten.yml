prelude: |
  class App def self.call(env) nil end end
  class Rack01 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack02 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack03 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack04 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack05 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack06 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack07 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack08 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack09 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack10 def initialize(app) @app = app end; def call(env) @app.call(env) end end

  app = App
  app = Rack01.new(app)
  app = Rack02.new(app)
  app = Rack03.new(app)
  app = Rack04.new(app)
  app = Rack05.new(app)
  app = Rack06.new(app)
  app = Rack07.new(app)
  app = Rack08.new(app)
  app = Rack09.new(app)

  def bench(app)
    i = 0
    while i < 1000
      app.call(nil)
      i += 1
    end
  end

  5.times { bench(app) }
  sleep 3

benchmark: bench(app)

loop_count: 10000
