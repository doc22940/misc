prelude: |
  class App def self.call(env) nil end end
  class Rack01 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack02 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack03 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack04 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack05 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack06 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack07 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack08 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack09 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack10 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack11 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack12 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack13 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack14 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack15 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack16 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack17 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack18 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack19 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack20 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack21 def initialize(app) @app = app end; def call(env) @app.call(env) end end
  class Rack22 def initialize(app) @app = app end; def call(env) @app.call(env) end end

  app = App
  app = Rack01.new(app)
  app = Rack02.new(app)
  app = Rack03.new(app)
  app = Rack04.new(app)
  app = Rack05.new(app)
  app = Rack06.new(app)
  app = Rack07.new(app)
  app = Rack08.new(app)
  app = Rack09.new(app)
  app = Rack10.new(app)
  app = Rack11.new(app)
  app = Rack12.new(app)
  app = Rack13.new(app)
  app = Rack14.new(app)
  app = Rack15.new(app)
  app = Rack16.new(app)
  app = Rack17.new(app)
  app = Rack18.new(app)
  app = Rack19.new(app)
  app = Rack20.new(app)
  app = Rack21.new(app)
  app = Rack22.new(app)

  def bench(app)
    i = 0
    while i < 1000
      app.call(nil)
      i += 1
    end
  end

  5.times { bench(app) }
  sleep 5

benchmark: bench(app)

loop_count: 10000
